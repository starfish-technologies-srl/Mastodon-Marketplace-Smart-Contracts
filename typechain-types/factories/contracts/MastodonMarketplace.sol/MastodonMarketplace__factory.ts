/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  MastodonMarketplace,
  MastodonMarketplaceInterface,
} from "../../../contracts/MastodonMarketplace.sol/MastodonMarketplace";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_xen",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "_dxn",
        type: "address",
      },
      {
        internalType: "contract IDxnBuyAndBurn",
        name: "_dxnBuyBurn",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address",
            name: "nftContract",
            type: "address",
          },
          {
            internalType: "address",
            name: "seller",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "supply",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "payoutToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct IMastodonMarketplace.Order",
        name: "",
        type: "tuple",
      },
    ],
    name: "Buy",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address",
            name: "nftContract",
            type: "address",
          },
          {
            internalType: "address",
            name: "seller",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "supply",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "payoutToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct IMastodonMarketplace.Order",
        name: "",
        type: "tuple",
      },
    ],
    name: "Delist",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address",
            name: "nftContract",
            type: "address",
          },
          {
            internalType: "address",
            name: "seller",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "supply",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "payoutToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct IMastodonMarketplace.Order",
        name: "",
        type: "tuple",
      },
    ],
    name: "List",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "listIndex",
        type: "uint256",
      },
      {
        internalType: "enum IMastodonMarketplace.PayoutToken",
        name: "token",
        type: "uint8",
      },
    ],
    name: "buy",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "listIndex",
        type: "uint256",
      },
    ],
    name: "delistERC1155",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "listIndex",
        type: "uint256",
      },
    ],
    name: "delistERC721",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "nftContract",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "supply",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "payoutToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
        ],
        internalType: "struct IMastodonMarketplace.InputOrderERC1155",
        name: "inputOrder",
        type: "tuple",
      },
    ],
    name: "listERC1155",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "nftContract",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "payoutToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
        ],
        internalType: "struct IMastodonMarketplace.InputOrderERC721",
        name: "inputOrder",
        type: "tuple",
      },
    ],
    name: "listERC721",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "";

type MastodonMarketplaceConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MastodonMarketplaceConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MastodonMarketplace__factory extends ContractFactory {
  constructor(...args: MastodonMarketplaceConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _xen: AddressLike,
    _dxn: AddressLike,
    _dxnBuyBurn: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_xen, _dxn, _dxnBuyBurn, overrides || {});
  }
  override deploy(
    _xen: AddressLike,
    _dxn: AddressLike,
    _dxnBuyBurn: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_xen, _dxn, _dxnBuyBurn, overrides || {}) as Promise<
      MastodonMarketplace & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): MastodonMarketplace__factory {
    return super.connect(runner) as MastodonMarketplace__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MastodonMarketplaceInterface {
    return new Interface(_abi) as MastodonMarketplaceInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): MastodonMarketplace {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as MastodonMarketplace;
  }
}
